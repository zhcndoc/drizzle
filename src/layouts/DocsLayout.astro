---
import EndOfContent from "@components/layout/EndOfContent.astro";
import GlobalStyles from "@components/layout/GlobalStyles.astro";
import MDXStyles from "@components/layout/MDXStyles.astro";
import Banner from "@components/layout/Banner.astro";
import InitComponentsScripts from "@components/layout/InitComponentsScripts.astro";
import BaseHead from "@components/baseHead/BaseHead.astro";
import Header from "../components/layout/Header.astro";
import RightAside from "../components/layout/RightAside.astro";
import Footer from "../components/layout/Footer.astro";
import DocsSidebar from "../components/layout/DocsSidebar.astro";
import getContentTree from "@/utils/getContentTree";
import type { IHeading } from "@/types/astro";

interface Props {
  customTitle?: string;
  description?: string;
  headings: IHeading[];
}

const { customTitle, headings, description } = Astro.props;
const { slug } = Astro.params;
const { tree, filteredHeadings, title } = await getContentTree({
  headings,
  slug,
});
---

<!doctype html>
<html lang="en">
  <BaseHead
    title={`Drizzle ORM - ${customTitle || title}`}
    description={description}
  />
  <body class="banner-shown">
    <GlobalStyles />
    <MDXStyles />
    <!-- <Banner /> -->
    <Header />
    <main class="documentation-container">
      <DocsSidebar tree={tree} headings={filteredHeadings} />
      <div class="documentation-content-wrap scrollbar">
        <div class="documentation-content">
          <slot />
          <EndOfContent />
          <Footer />
        </div>
        <div class="right-aside-container">
          <RightAside />
        </div>
      </div>
    </main>
    <InitComponentsScripts />
    <style>
      .right-aside-container {
        position: relative;
      }

      @media screen and (max-width: 1024px) {
        .documentation-content-wrap {
          grid-template-columns: minmax(0, 1fr);
        }
        .right-aside-container {
          display: none;
        }
      }
    </style>
    <style is:global>
      .documentation-content-wrap {
        display: grid;
        width: 100%;
        grid-template-columns: minmax(0, 1fr) 260px;
        overflow-y: scroll;
        overflow-x: hidden;
      }

      .navigation_nav_container_blur {
        -webkit-backdrop-filter: blur(12px);
        backdrop-filter: blur(12px);
        pointer-events: none;
        position: absolute;
        z-index: -1;
        height: 100%;
        width: 100%;
        background-color: hsla(0, 0%, 100%, 0.85);
        box-shadow:
          0 0 0 0 transparent,
          0 0 0 0 transparent,
          0 2px 4px 0 rgba(0, 0, 0, 0.02),
          0 1px 0 0 rgba(0, 0, 0, 0.06);
      }
      .navigation_nav_content_wrap {
        margin-left: auto;
        margin-right: auto;
        display: flex;
        height: 64px;
        max-width: 1440px;
        align-items: center;
        gap: 8px;
        padding-left: max(env(safe-area-inset-left), 24px);
        padding-right: max(env(safe-area-inset-right), 24px);
      }
      .documentation-container {
        max-width: 1440px;
        width: 100%;
        display: flex;
        margin: 0 auto;
      }

      body[class~="banner-shown"] .documentation-container {
        height: calc(100dvh - 64px);
      }

      .documentation-content {
        padding-left: 48px;
        padding-right: 40px;
        padding-top: 1rem;
        width: 100%;
        max-width: 892px;
        position: relative;
      }

      @media screen and (max-width: 1279px) {
        .documentation-content {
          padding-left: 24px;
          padding-right: 12px;
        }
      }

      @media screen and (max-width: 1024px) {
        .right-aside-container {
          display: none;
        }
      }

      @media screen and (max-width: 768px) {
        .documentation-content {
          padding-left: 16px;
          padding-right: 16px;
          padding-top: 1rem;
          width: 100%;
        }
      }
    </style>
    <script>
      const hash = window.location.hash;
      if (hash !== "") {
        const targetElement = document.querySelector(hash);
        if (targetElement) {
          targetElement.scrollIntoView();
        }
      }
    </script>
  </body>
</html>
